
# BONUS_NAME	=	checker
SOURCE	=	check_stack.c error_free.c ft_swap_list.c init_stack.c \
			mini_sort.c pre_sort.c push_swap.c push.c reverse_rotate.c \
			rotate.c stack_sort.c upgrede_instr.c check_value.c init_enum.c \
			ft_list_add_back.c ft_list_add_front.c ft_list_back.c ft_list_del_next.c \
			ft_list_delete.c ft_list_free.c ft_list_last.c ft_list_new.c ft_list_size.c 

OBJECTS	=	${SOURCE:.c=.o}

NAME	=   test

HEADER  =   push_swap.h libft/libft.h

RM		=	rm -f

AR		=	ar rcs

CFLAGS	=	-Wall -Wextra -Werror

all:		${NAME}

${NAME}:	${OBJECTS}
			make -C libft
			gcc libft/libft.a $(NAME)
			${AR} ${NAME} ${OBJECTS} 

%.o: %.c ${HEADER}
			gcc  -Ilibft -c $< -o $@

clean:
			make clean -C libft
			${RM} ${OBJECTS}

fclean:		clean
			make fclean -C libft
			${RM} ${NAME} *.out.dSYM

re:			fclean all

debug:		re
			gcc -g  *.c ./libft/libft.a

.PHONY:		all clean fclean bonus debug




# SRCS_COMMS = $(shell ls ./commands/*.c)

# SRCS_UTILS =   $(shell ls ./utils/*.c)

# SRCS_SORT	=	$(shell ls ./sort/*.c)

# SRCS		=   ${SRCS_UTILS} ${SRCS_COMMS} ${SRCS_SORT} push_swap.c

# BONUS		=	${SRCS_UTILS} ${SRCS_COMMS} checker.c

# CFLAGS	= -Wall -Wextra -Werror

# RM		= rm -rf

# CC		=   gcc

# OBJS	=	$(SRCS:%.c=%.o)

# BONUS_OBJS	=	$(BONUS:%.c=%.o)

# ARG		=	$(shell ruby -e "puts (1..500).to_a.shuffle.join(' ')")

# all:		$(NAME)

# $(NAME):	${OBJS} $(HEADER)
# 			$(CC) -o $(NAME) ${OBJS}

# bonus:		$(BONUS_NAME)

# $(BONUS_NAME):	${BONUS_OBJS} $(HEADER)
# 				$(CC) -o $(BONUS_NAME) ${BONUS_OBJS}

# %.o: 		%.c	
# 			$(CC) $(CFLAGS) -I./ -c $< -o $@

# clean:
# 			$(RM) ${OBJS} ${BONUS_OBJS}

# fclean:		clean
# 			$(RM) $(NAME) $(BONUS_NAME)

# re:			fclean all

# test:		
# 			make -s && make -s  clean && ./push_swap $(ARG)

# test2:
# 			echo "$(ARG)" > arg.txt
# 			make -s && ./push_swap $(shell cat arg.txt) | ./checker_Mac $(shell cat arg.txt)
# 			./push_swap $(shell cat arg.txt) | wc -l

# .PHONY: clean fclean re bonus test